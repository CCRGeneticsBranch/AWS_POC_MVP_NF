process DBinput {

     tag "$meta.lib"

     publishDir "${params.resultsdir}/${meta.id}/${meta.casename}/${meta.id}/db", mode: "${params.publishDirMode}"

     input:
     path(dbinput_annot_libs)
     path(dbinput_snpeff_libs)
     val(meta)
   
   
     output:
     tuple val(meta),
        path("${meta.id}.${meta.type}")

     stub:
     """
     touch "${meta.id}.${meta.type}"
     """

     script:

     """
    makeDBVariantFile.pl ${dbinput_annot_libs.join(' ')}|AddSampleType.pl - "${meta.lib} ${meta.type}" "${meta.lib} ${meta.sc}" > ${meta.id}.${meta.type}.tmp
    if [ ${meta.type}  == 'germline' ] || [ ${meta.type} == 'variants' ]; then  
         addFS.pl ${meta.id}.${meta.type}.tmp ${dbinput_snpeff_libs.join(' ')} >${meta.id}.${meta.type}
         rm -rf ${meta.id}.${meta.type}.tmp
    else
        mv ${meta.id}.${meta.type}.tmp ${meta.id}.${meta.type}
    fi
     """
}


process DBinput_multiple {

     tag "$meta.lib"

     publishDir "${params.resultsdir}/${meta.id}/${meta.casename}/${meta.id}/db", mode: "${params.publishDirMode}"

     input:
     tuple val(meta),path(annotated1), path(annotated2)
     tuple val(meta),path(snpeff1), path(snpeff2)
     
   
   
     output:
     tuple val(meta),
        path("${meta.id}.${meta.type}")

     stub:
     """
     touch "${meta.id}.${meta.type}"
     """

     script:

     """
     LIB1=`echo ${annotated1}|awk -F"." '{print \$1}'` 
     LIB2=`echo ${annotated2}|awk -F"." '{print \$1}'` 
    makeDBVariantFile.pl ${annotated1} ${annotated2}|AddSampleType.pl - "\$LIB1 ${meta.type} \$LIB2 ${meta.type}" "\$LIB1 ${meta.sc} \$LIB2 ${meta.sc}" > ${meta.id}.${meta.type}.tmp
    if [ ${meta.type}  == 'germline' ] || [ ${meta.type} == 'variants' ]; then  
         addFS.pl ${meta.id}.${meta.type}.tmp ${snpeff1} ${snpeff2} >${meta.id}.${meta.type}
         rm -rf ${meta.id}.${meta.type}.tmp
    else
        mv ${meta.id}.${meta.type}.tmp ${meta.id}.${meta.type}
    fi
     """
}

process DBinput_multiples {

     tag "$meta.lib"

     publishDir "${params.resultsdir}/${meta.id}/${meta.casename}/${meta.id}/db", mode: "${params.publishDirMode}"

     input:
     path(dbinput_annot)
     path(dbinput_somatic_snpeff)
     path(dbinput_HC_snpeff)
     val(meta)
     val(meta2)
     val(group)
   
     output:
     tuple val(meta),
        path("${meta.id}.${group}")

     stub:
     """
     touch "${meta.id}.${group}"
     """

     script:

     """
     makeDBVariantFile.pl ${dbinput_annot.join(' ')}|AddSampleType.pl - "${meta2.lib} ${meta2.type} ${meta.lib} ${meta.type}" "${meta2.lib} ${meta2.sc} ${meta.lib} ${meta2.sc}" > ${meta.id}.${group}.tmp
     addFS.pl ${meta.id}.${group}.tmp ${dbinput_HC_snpeff.join(' ')} ${dbinput_somatic_snpeff.join(' ')} > ${meta.id}.${group}
     rm -rf ${meta.id}.${group}.tmp
     """
}


process Somatic_actionable {

     tag "$meta.id"

     publishDir "${params.resultsdir}/${meta.id}/${meta.casename}/Actionable", mode: "${params.publishDirMode}"

     input:
     tuple val(meta),path(annotation_coding_rare)
     tuple val(meta2),path(somatic)
     path somatic_actionable_sites
     path combined_gene_list

     output:
     tuple val(meta),
        path("${meta.id}.somatic.actionable.txt")

     stub:
     """
     touch "${meta.id}.somatic.actionable.txt"
     """
     
     script:
     """
     Actionable.v3.pl somatic ${somatic_actionable_sites} ${combined_gene_list} ${somatic} ${annotation_coding_rare} > ${meta.id}.somatic.actionable.txt

     """
}

process Germline_actionable {

     tag "$meta.id"

     publishDir "${params.resultsdir}/${meta.id}/${meta.casename}/Actionable", mode: "${params.publishDirMode}"

     input:
     tuple val(meta),path(annotation_coding_rare)
     tuple val(meta2),path(germline)
     path somatic_actionable_sites
     path combined_gene_list
     tuple val(meta2),path(dbinput_somatic)

     output:
     tuple val(meta),
        path("${meta.id}.germline.actionable.txt")

     stub:
     """
     touch "${meta.id}.germline.actionable.txt"
     """
     
     script:
     """
     Actionable.v3.pl germline ${dbinput_somatic} ${germline} ${annotation_coding_rare} ${combined_gene_list} ${somatic_actionable_sites}  > ${meta.id}.germline.actionable.txt

     """
}