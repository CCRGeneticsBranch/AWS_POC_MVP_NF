{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#overview-of-the-workflow","title":"Overview of the workflow","text":"<p>This next-generation sequencing (NGS) pipeline is containerized, platform-independent, uses Nextflow DSL2 workflow, and currently operates on NIH's Biowulf HPC cluster and the AWS cloud. This Exome-RNAseq workflow performs extensive quality control, mutational calling, tumor mutational burden assessment, mutational signatures, HLA typing, copy number calling, T-cell infiltration prediction, neoantigen prediction, gene expression profiling, fusion detection, variant calling, and annotation. This comprehensive suite is crucial for deep genomic characterization, addressing both research samples and clinical patient data at NIH. The ClinOmics data portal extends these capabilities by offering a user-friendly web portal for data exploration.</p> <p>Here is a Snapshot of our RNAseq and Exome workflows.</p>"},{"location":"#rnaseq-workflow","title":"RNAseq Workflow","text":""},{"location":"#exome-workflow","title":"Exome Workflow","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<p>To run this workflow, you will need the following software:</p> <pre><code>    Nextflow &gt;= 21.04.3\n    Singularity 3.10.5\n    Graphviz 2.40\n</code></pre>"},{"location":"#installation","title":"Installation","text":"<p>Please clone this repository to your local filesystem using the following command:</p> <pre><code>        git clone https://github.com/CCRGeneticsBranch/Oncogenomics_NF_WF.git\n        cd Oncogenomics_NF_WF\n</code></pre>"},{"location":"#setting-up-the-workflow-on-biowulf","title":"Setting up the workflow on biowulf","text":"<ol> <li>This workflow is hosted on biowulf in khanlab space /data/khanlab/projects/Nextflow_dev/dev/AWS_POC_Nextflow.</li> <li>All the pipeline config can be accessed using nextflow.config file.</li> <li>Within the nextflow.config file you can select the profile to launch the pipeline. To run pipeline on biowulf select profile <code>biowulf</code>. This is set up to work with biowulf batch resources.</li> <li>Guidelines to create an input samplesheet can be found here.</li> <li>All the references, annotation and bed files are currently located under /data/khanlab. We currently support data processing for these capture kits.</li> </ol>"},{"location":"#sequencing-capture-kits","title":"Sequencing capture kits","text":"RNAseq Exome Access clin_ex_v1 PolyA seqcapez.hu.ex.v3 PolyA_stranded Agilent_v7 Ribozero idt_v2_plus smartrna xgen_hyb_panelv2 seqcapez_hu_ex_v3 <p>If you want to process the data sequenced by other kits, please reach out to Vineela Gangalapudi.</p>"},{"location":"dockers/","title":"Dockers","text":"<p>On Biowulf, this pipeline is executed by first loading the Singularity and Nextflow modules. The pipeline itself utilizes Docker containers for processing data across its various subworkflows and processes.</p>"},{"location":"dockers/#docker-containers-used-in-the-pipeline","title":"Docker Containers Used in the Pipeline","text":""},{"location":"dockers/#nci-docker-containers","title":"NCI Docker Containers","text":"Tool/Process Container Path Cutadapt <code>nciccbr/ncigb_cutadapt_v1.18:latest</code> Fastqc <code>nciccbr/ccrgb_qctools:latest</code> Star., Rsem., Arriba, Starfusion <code>nciccbr/ccrgb_starplus:latest</code> Fusioncatcher <code>nciccbr/ccrgb_fusioncatcher:v2.0</code> Multiqc.* <code>nciccbr/ccbr_multiqc_1.9:v0.0.1</code> Picard.*, HSMetrics, Hotspot_Coverage, Hotspot_Boxplot, Flagstat, Bamutils, Merge_new_HLA, MergeHLA, Read_depth, FailedExons_Genes, Combine_variants, Merge_Pvacseq_vcf <code>nciccbr/ccrgb_qctools:latest</code> GATK.*, RNAseq_HaplotypeCaller, Exome_HaplotypeCaller <code>nciccbr/ccrgb_gatk_3.8-1:v1.0</code> Genotyping, HotspotPileup, Mutect_order, MutationalSignature, CoveragePlot, Exome_QC, CircosPlot, CircosPlot_lib, Mergefusion, Allstepscomplete, RNAlibrary_customQC, RNAqc_TrancriptCoverage, CoveragePlot, Coverage, Lib2_RNAqc_TrancriptCoverage, TargetIntervals, CNVkit_png, Strelka_vcf_processing <code>nciccbr/ccrgb_qctools:latest</code> AddAnnotation., Split_vcf, UnionSomaticCalls, Actionable., DBinput.*, Sequenza_annot, MutationBurden, Expressed <code>nciccbr/ccrgb_qctools:latest</code> Mixcr <code>nciccbr/ccrgb_mixcr:v1.1</code> VDJtools <code>nciccbr/ccrgb_vdjtools:latest</code> Bamutil <code>nciccbr/ccrgb_bamutil:latest</code> SnpEff <code>nciccbr/ccrgb_snpeff:1.0</code> Vcf2txt, FormatInput.*, Annovar, Custom_annotation, Combine_annotation <code>nciccbr/ccrgb_annovar:v1.0</code> RNAseQC <code>nciccbr/ccrgb_rnaseqc_v1.1.8:latest</code> Strandedness <code>nciccbr/ccbr_ngsderive:v1.0</code> BWA <code>nciccbr/ccbr_ubuntu_base_20.04:v2.0</code> Sequenza <code>nciccbr/ccrgb_qctools:v3.2</code> Cosmic3Signature <code>nciccbr/ccrgb_qctools:v4.0</code> Fastq_screen <code>nciccbr/ccbr_fastq_screen_0.14.1:latest</code> TcellExtrect.* <code>hsienchao/tcell_extrect:v1</code> HLA_HD <code>vinegang/ccrgb_hlahd_1.7.0:v1.0</code> Conpair.* <code>nciccbr/ccrgb_conpair:latest</code> Fusion_Annotation, Merge_fusion_annotation <code>hsienchao/fusion_tools:v1</code> VEP <code>dnousome/ccbr_vcf2maf:v102.0.0</code> Pvacseq <code>vinegang/pvactools_1.3.5_ps:1.0</code> Mantis_MSI <code>vinegang/mantis:v1.0.5</code>"},{"location":"dockers/#non-nci-docker-containers","title":"Non-NCI Docker Containers","text":"Tool/Process Container Path Kraken <code>staphb/kraken:1.1.1-no-db</code> Krona <code>pbelmann/krona:latest</code> Bam2tdf <code>quay.io/biocontainers/igvtools:2.3.93--0</code> Optitype <code>fred2/optitype:release-v1.3.1</code> VerifyBamID <code>ottov/verifybamid-aws:latest</code> CNVkitP.* <code>zlskidmore/cnvkit:0.9.6</code> Mutect <code>dinglab2/mutect-tool:20190313</code> Manta <code>szarate/manta:v1.6.0</code> Strelka <code>davelabhub/strelka:2.9.10--0</code> Sequenza_utils <code>nkrumm/sequenza-nf:latest</code> CUSTOM_DUMPSOFTWAREVERSIONS <code>quay.io/biocontainers/multiqc:1.11--pyhdfd78af_0</code>"},{"location":"pipeline_launch/","title":"Running the workflow.","text":"<p>To initiate the workflow, execute the <code>launch.sh</code> script in a interactive node. This script acts as a wrapper, spawning and submitting jobs to the SLURM scheduling system. It extracts the <code>PatientID</code> and <code>Casename</code> information from the samplesheet, creates the corresponding output directory for each case, and organizes all results and log files under <code>[output_directory]/PatientID/Casename/</code>.</p> <pre><code>Usage: ./launch.sh &lt;samplesheet_with_full_path&gt; [output_directory] [genome]\nThis script requires at least one positional argument:\n1. Full path to samplesheet csv file\nOptional arguments:\n2. Path to results directory (default: /data/khanlab/projects/processed_DATA)\n3. Genome name. Accepted values are hg19 and mm39 (default: hg19)\n</code></pre>"},{"location":"pipeline_launch/#workflow-log","title":"Workflow log","text":"<p>When the workflow is launched, it will produce a log file that provides information about the pipeline execution, including the command line used, the version of Nextflow, the input folder path, the results directory, and the work directory.</p> <p>The log file will be generated under /Resultsdir/PatientID/casename directory. This is the logfile naming convention. <code>patientid_casename_jobid_datelaunched-timelaunched.out</code></p> <p><code>Example: NCI0439_TestTNR_34233573_20240822-183525.out</code></p>"},{"location":"pipeline_launch/#sample-log-file","title":"Sample log file:","text":"<pre><code>[+] Loading singularity  4.0.3  on cn4280\n[+] Loading java 17.0.3.1  ...\n[+] Loading nextflow  23.10.0\n[+] Loading Graphviz v 2.46.1  ...\nNXF_HOME=/data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/.nextflow\nnextflow run -c /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config -profile biowulf_test_run_slurm --logdir /data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/log /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf -resume -with-trace -with-timeline -with-dag\nESC[33mNextflow 24.04.4 is available - Please consider updating your version to itESC(BESC[m\nN E X T F L O W  ~  version 23.10.0\nLaunching `/vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf` [shrivelled_stallman] DSL2 - revision: b8c8cd72d2\nE X O M E - R N A S E Q - N F   P I P E L I N E\n===================================\nNF version   : 23.10.0\nrunName      : shrivelled_stallman\nusername     : gangalapudiv2\nconfigs      : [/vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config, /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config]\nprofile      : biowulf_test_run_slurm\ncmd line     : nextflow run -c /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/nextflow.config -profile biowulf_test_run_slurm --logdir /data/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/log /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF/main.nf -resume -with-trace -with-timeline -with-dag\nstart time   : 2024-08-20T12:54:52.989621486-04:00\nprojectDir   : /vf/users/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF\nlaunchDir    : /vf/users/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR\nworkdDir     : /vf/users/khanlab/projects/Nextflow_dev/dev/NCI0439/TestTNR/work\nhomeDir      : /home/gangalapudiv2\n\n[-        ] process &gt; Tumor_Normal_RNAseq_WF:Comm... -\n[-        ] process &gt; Tumor_Normal_RNAseq_WF:Comm... -\n[-        ] process &gt; Tumor_Normal_RNAseq_WF:Comm... -\n[-        ] process &gt; Tumor_Normal_RNAseq_WF:Comm... -\n[-        ] process &gt; Tumor_Normal_RNAseq_WF:Comm... -\n</code></pre>"},{"location":"pipeline_launch/#workflow-resources","title":"Workflow Resources","text":"<p>$Script_home ---&gt; Path to the code repository (/data/khanlab/projects/Nextflow_dev/dev/AWS_POC_MVP_NF).</p> <p>$Script_home/nextflow.config ---&gt; All the pipeline config resources are called from this file. We are using <code>biowulf_test_run_slurm</code> profile to run the samples on biowulf.</p> <p>$Script_home/config ---&gt; Cluster config, singularity config, docker config and params config are located here.</p> <p>$Script_home/main.nf ---&gt; This script calls the workflows and subworkflows in the pipeline.</p>"},{"location":"pipeline_launch/#run-debugging","title":"Run Debugging","text":"<p>Run-related Files: All files associated with the run will be generated in the <code>[output_directory]/PatientID/Casename</code> directory.</p> <p>Log Files: The log file, ending in <code>*.out</code>, will be located in <code>[output_directory]/PatientID/Casename</code>. This file contains details on any errors encountered during the run and provides the path to the work directory for troubleshooting.</p> <p>Work directory: Inside <code>[output_directory]/PatientID/Casename/work</code>, you will find subfolders containing <code>.command.sh</code>, <code>.command.log</code>, and <code>.command.err</code> files for each process. These files offer detailed information about the execution of each command and any issues that may have occurred.</p>"},{"location":"references/","title":"Pipeline References & Tools","text":"<p>The current version of the pipeline supports the human reference genome Hg19 and the mouse reference genome mm39, both of which are obtained from Gencode.</p>"},{"location":"samplesheet/","title":"Setting up Samplesheet","text":"<p>There are two ways to generate a samplesheet for the pipeline depending on the use case. If the goal is to process patient fastq files through the pipeline to use the results for secondary analysis, you can follow these steps to build your own samplesheet. Along with processing the data, if you want to visualize the results on ClinOmics data portal then follow steps to build samplesheet from mastersheet. This is highly recommended.</p>"},{"location":"samplesheet/#build-samplesheet-from-mastersheet","title":"Build samplesheet from mastersheet","text":"<p>For khanlab purposes, pipeline is always launched using the information in the mastersheets on biowulf under /data/khanlab space. The script samplesheet_builder.py queries the mastersheets to build a samplesheet for the pipeline. A copy of this script is available in the pipeline git repo. This script takes two inputs <code>PatientID</code> and <code>casename</code>. By default, it queries all mastersheets found in the <code>/data/khanlab/projects/DATA/Sequencing_Tracking_Master</code> directory and uses <code>/data/khanlab/projects/DATA</code> as the default input directory.</p> <p>When using a non-Khanlab master sheet, ensure the following columns are included:</p> <ul> <li>Patient ID: <code>PatientID</code></li> <li>Library ID: <code>LibraryID</code></li> <li>Enrichment Step: <code>Capture kit name</code></li> <li>Matched RNA-seq Library: <code>Matching RNA lib for the Exome library</code> (can be left empty)</li> <li>Matched Normal: <code>Matching normal lib for the Exome library</code> (can be left empty)</li> <li>Diagnosis: <code>Diagnosis</code></li> <li>Case Name: <code>casename for website</code></li> <li>Type: <code>Data type information</code></li> <li>FCID: <code>flowcell ID</code> (optional)</li> <li>Project: <code>Project name</code></li> </ul> <p>Read1, Read2 Construction: The script uses information from the Input directory and following columns to build the file paths for <code>read1</code> and <code>read2</code>.</p> <ul> <li>Library ID</li> <li>FCID (optional)   If FCID is provided, it will be used to build the paths; otherwise, the paths will be constructed using only the Input Path and Library ID.</li> </ul> <pre><code>Usage: python ./samplesheet_builder.py &lt;patient_id&gt; &lt;case_name&gt;\nDefault Samplesheet Directory: /data/khanlab/projects/DATA/Sequencing_Tracking_Master\nDefault Input Directory: /data/khanlab/projects/DATA\nTo use custom directories, modify the script:\n   - Change 'DEFAULT_SAMPLESHEET_DIR' to your samplesheet directory path\n   - Change 'DEFAULT_INPUT_DIR' to your input directory path\n</code></pre> <p><code>python ./samplesheet_builder.py Test_Patient casename</code> will output a file Test_Patient_casename.csv in the same folder.</p>"},{"location":"samplesheet/#error-handling","title":"Error Handling","text":"<p>The script includes the following error handling mechanisms:</p> <ul> <li>Patient ID or Case Name Not Found:   If the provided patient ID case name combination is not found in the master sheet, the script will generate an error message.</li> <li>Invalid <code>read1</code> and <code>read2</code> Paths:   If the paths for <code>read1</code> and <code>read2</code> are invalid, the script will output an error message. This message will prompt you to check and verify the input paths.</li> </ul>"},{"location":"samplesheet/#build-your-own-samplesheet","title":"Build your own samplesheet","text":"<p>Alternately, we can build custom samplesheet without mastersheet. These are the required columns.</p> Column name Notes Example sample Patient name NCI-Test1 library Name of the sample library Test1_T1D_E read1 Full path to the read1 /data/khanlab/DATA/Sample_Test1_T1D_E/Sample_Test1_T1D_E.R1.fastq.gz read2 Full path to the read2 /data/khanlab/DATA/Sample_Test1_T1D_E/Sample_Test1_T1D_E.R2.fastq.gz sample_captures Name of the capture kit used List of supported capture kits are here Matched_RNA Matched RNA library for the tumor library. This includes cell_line_RNA and tumor_RNA Test1_T1R_T Matched_normal Matched exome normal library for the tumor library. This includes panel, blood DNA, cell_line_DNA Test1_N1D_E Diagnosis Diagnosis of the patient Glioma casename Casename for the patient NCI-Test1 type Data type example: tumor_RNA, tumor_DNA, normal_DNA, blood_DNA, cell_line_DNA, cell_line_RNA FCID Flowcell ID ACJ678349"},{"location":"samplesheet/#example-samplesheet","title":"Example samplesheet:","text":"<p>sample,library,read1,read2,sample_captures,Diagnosis,Matched_RNA,Matched_normal,casename,type,FCID,Project Test8,Test5_T1D_E,/data/khanlab/projects/fastq/Test5_T1D_E_R1.fastq.gz,/data/khanlab/projects/fastq/Test5_T1D_E_R2.fastq.gz,clin.ex.v1,Osteosarcoma,,Test8_N2D_E,NFtest0523,tumor_DNA,AWXYNH2,Test Test8,Test8_N2D_E,/data/khanlab/projects/fastq/Test8_N2D_E_R1.fastq.gz,/data/khanlab/projects/fastq/Test8_N2D_E_R2.fastq.gz,clin.ex.v1,Osteosarcoma,,,NFtest0523,normal_DNA,AWXYNH2,Test</p>"}]}