nextflow.enable.dsl = 2
nextflowVersion = '>=22'
def timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
dag {
    enabled = true
    overwrite = true
    file = "dag.${timestamp}.png"
}
report {
    enabled = true
    overwrite = true
    file = "report_${timestamp}.html"
}


// test profile name needs to change to AWS. 
// Add reference files to s3 buckets as we test on ec2 instance

profiles {

    aws_agc_test {
        aws.batch.maxParallelTransfers = 5
        env.SLURM_JOB_ID = ""
        
        docker {
            enabled = true
            envWhitelist = 'SLURM_JOB_ID'
        }
        
        includeConfig 'config/docker.config'
        
        def report_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
        
        report {
            enabled = true
            overwrite = true
            file = "s3://agc-424336837382-us-east-1/nfmvpout_vnk/reports/report_${report_timestamp}.html"
        }
        
        trace {
            enabled = true
            overwrite = true
            file = "s3://agc-424336837382-us-east-1/nfmvpout_vnk/reports/pipeline_trace.txt"
        }
        
        timeline {
            enabled = true
            overwrite = true
            file = "s3://agc-424336837382-us-east-1/nfmvpout_vnk/reports/timeline_${report_timestamp}.html"
        }
        
        params {
            publishDirMode = "copy"
            fusioncatcher_db = "s3://ccr-genomics-testdata/References/fusioncatcher/human_v108"
            genome="s3://ccr-genomics-testdata/References/GRCh37/GRCh37.primary_assembly.genome_ERCC92_ksorted.fa"
            gtf = "s3://ccr-genomics-testdata/References/GRCh37/gencode.v37lift37.annotation_ERCC92.gtf"
            transcript_gtf = "s3://ccr-genomics-testdata/References/GRCh37/gencode.v37lift37.transcript_ERCC92.gtf"
            reads = "s3://ccr-genomics-testdata/testdata/Test*_R_T_R{1,2}.fastq.gz"
            resultsdir = "s3://agc-424336837382-us-east-1/nfmvpout_vnk"
            fusioncatcher_db = "s3://ccr-genomics-testdata/References/fusioncatcher/human_v108"
            mixcr_license = "s3://ccr-genomics-testdata/Licenses/mi.license"
            starfusion_db = "s3://ccr-genomics-testdata/References/STARfusion/GRCh37_gencode_v19_CTAT_lib_Mar012021.plug-n-play/ctat_genome_lib_build_dir/"
            rsem_index = "s3://ccr-genomics-testdata/References/rsem_1.3.2"
            star_genome_index = "s3://ccr-genomics-testdata/References/index-STAR_2.7.9a"
            dbNSFP2_4 = "s3://ccr-genomics-testdata/References/GRCh37/dbNSFP2/dbNSFP2.4.txt.gz"
            dbNSFP2_4_tbi = "s3://ccr-genomics-testdata/References/GRCh37/dbNSFP2/dbNSFP2.4.txt.gz.tbi"
            ref_flat = "s3://ccr-genomics-testdata/References/GRCh37/ref_flat.txt.gz"
            rRNA_interval = "s3://ccr-genomics-testdata/References/GRCh37/rRNA_body.txt"
            genome_fai = "s3://ccr-genomics-testdata/References/GRCh37/GRCh37.primary_assembly.genome_ERCC92_ksorted.fa.fai"
            genome_dict = "s3://ccr-genomics-testdata/References/GRCh37/GRCh37.primary_assembly.genome_ERCC92_ksorted.dict"
            chrom_sizes = "s3://ccr-genomics-testdata/References/GRCh37/chrom.sizes"
            phase1_1000g = "s3://ccr-genomics-testdata/References/GRCh37/1000G_phase1.indels.hg19.vcf"
            dbsnp = "s3://ccr-genomics-testdata/References/GRCh37/dbsnp_138.b37.chr_added_sorted.vcf"
            Mills_and_1000g = "s3://ccr-genomics-testdata/References/GRCh37/Mills_and_1000G_gold_standard.indels.hg19.vcf"
            Sites1000g4genotyping = "s3://ccr-genomics-testdata/References/GRCh37/annotation/1000gSites4genotyping.v2.bed"
            access_hotspot = "s3://ccr-genomics-testdata/References/GRCh37/hotspot/hg19_Hotspot.08.08.16_merged.bed"
            hg19_hotspot_pos = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_hotspot_pos.txt"
            Biowulf_snpEff_config  = "s3://ccr-genomics-testdata/References/GRCh37/Tools_config/Biowulf_snpEff.config"
            //Annotation
            annovar_data = "s3://ccr-genomics-testdata/References/GRCh37/annotation/"
            cosmic = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_cosmic78.txt"
            clinseq = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_clinseq_951.txt"
            pcg = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_PCG_042616.txt"
            clinvar = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_clinvar_20160831.txt"
            hgmd = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_hgmd.2018.4.txt"
            matchTrial = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_MATCHTrial_2015_11.txt"
            mcg = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_MCG.06.24.15.txt"
            DoCM = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_DoCM.txt"
            CanDL = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_candl_10262015.txt"
            targetted_cancer_care = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_targated_cancer_care_10262015.txt"
            civic = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_civic_10262015.txt"
            ACMG = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_ACMG_v2.txt"
            hg19_BLsites = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_blacklistedSites.txt"
            hg19_WLsites = "s3://ccr-genomics-testdata/References/GRCh37/annotation/hg19_whitelistedSites.txt"
            //design kit
            access_target = "s3://ccr-genomics-testdata/References/GRCh37/design/IlluminaAccessKitRNASeq.target.hg19.merged.bed"
            // Arriba params come from the docker
         // blacklist = "/data/khanlab/projects/ngs_pipeline_testing/References_4.0/New_GRCh37/arriba_v2.0.0/database/blacklist_hg19_hs37d5_GRCh37_v2.0.0.tsv.gz"
         // proteinDomains = "/data/khanlab/projects/ngs_pipeline_testing/References_4.0/New_GRCh37/arriba_v2.0.0/database/protein_domains_hg19_hs37d5_GRCh37_v2.0.0.gff3"
         // cytobands = "/data/khanlab/projects/ngs_pipeline_testing/References_4.0/New_GRCh37/arriba_v2.0.0/database/cytobands_hg19_hs37d5_GRCh37_v2.0.0.tsv"

        }
        process {
            errorStrategy = 'retry'
            cpus = 2
            memory = '3 GB'
            withName: 'Arriba' {
               cpus = 8
               memory = '92 GB'
               time = '5h'
           }    

            withName: 'Star|RNAseQC' {
               cpus = 8
               memory = '92 GB'
               time = '5h'
           }    
           
            withName: 'Fusioncatcher' {
               cpus = 8
               memory = '92 GB'
               time = '5h'
           }   

            withName: 'SnpEff' {
               cpus = 8
               memory = '92 GB'
               time = '5h'
           }

        }
    }

    biowulf_test_run_local {

        params {
            config_profile_description = 'BIOWULF small test on LOCAL interactive node'
            config_profile_contact = 'kopardevn@nih.gov'
            // config_profile_url = 'https://hpc.nih.gov/apps/nextflow.html'
            max_memory = '20.GB'
            max_cpus = '3' 
            max_time = '4h'
        }
        includeConfig 'config/biowulf_small_test_params.config'
        includeConfig 'config/docker.config'
        includeConfig 'config/biowulf_singularity.config'
	    workDir = "$OUTDIR/work.$OUTTAG"
	    //resultsDir = "$OUTDIR/results"
        process {
            executor = 'local'
        }
    }

    biowulf_test_run_slurm {
        params {
            includeConfig 'config/docker.config'
            config_profile_description = 'BIOWULF small test on SLURM'
            config_profile_contact = 'kopardevn@nih.gov'
            config_profile_url = 'https://hpc.nih.gov/apps/nextflow.html'
            max_memory = '20.GB'
            max_cpus = '3' 
            max_time = '4h'
        }
        includeConfig 'config/biowulf_small_test_params.config'
        includeConfig 'config/docker.config'
        includeConfig 'config/biowulf_singularity.config'
        includeConfig 'config/biowulf_cluster_test.config'
	    workDir = "$OUTDIR/work.$OUTTAG"
	    //resultsDir = "$OUTDIR/results"
    }

}

